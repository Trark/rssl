const Texture2D g_input;
const Texture3D g_unused;
const SamplerState g_linearSampler = StaticSampler
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};
const RWTexture2D<float4> g_output : register(space1);

static int s_value = 0;

struct VertexAttributes
{
    float wetness : WETNESS;
    uint material : MATERIAL;
};

void VSMAIN(uint vid : SV_VertexID, uint iid : SV_InstanceID, out float4 o_pos : SV_Position, out float2 o_texcoord : TEXCOORD, out VertexAttributes o_vertex) {
    g_input;
    o_pos = float4(0, 0, 0, 0);
    o_texcoord = float2(0.5f, 0.5f);
    o_vertex.wetness = 0;
    o_vertex.material = 0;
    s_value = 1;
}

float4 PSMAIN(uint pid : SV_PrimitiveID, float2 i_texcoord : TEXCOORD, out float4 o_target0 : SV_Target0) : SV_Target1 {
    g_input;
    g_output;
    g_linearSampler;
    o_target0 = float4(i_texcoord.xy, 0, 0);
    return float4(0, 0, 0, 0);
}

Pipeline GraphicsTest
{
    VertexShader = VSMAIN;
    PixelShader = PSMAIN;
}
