void test() {
    bool all_1 = all(true);
    bool all_2 = all(bool2(true, true));
    bool all_3 = all(bool3(true, true, true));
    bool all_4 = all(bool4(true, true, true, true));
    bool any_1 = any(true);
    bool any_2 = any(bool2(true, true));
    bool any_3 = any(bool3(true, true, true));
    bool any_4 = any(bool4(true, true, true, true));
    uint select_u1 = select(true, 0u, 1u);
    int3 select_u3 = select(bool3(true, true, true), int3(0, 0, 0), int3(0, 0, 0));
    float4 select_f4 = select(bool4(true, true, true, true), float4(0.0f, 0.0f, 0.0f, 0.0f), float4(0.0f, 0.0f, 0.0f, 0.0f));
    int abs_i1 = abs(0);
    int2 abs_i2 = abs(int2(0, 0));
    int3 abs_i3 = abs(int3(0, 0, 0));
    int4 abs_i4 = abs(int4(0, 0, 0, 0));
    float abs_f1 = abs(0.0f);
    float2 abs_f2 = abs(float2(0.0f, 0.0f));
    float3 abs_f3 = abs(float3(0.0f, 0.0f, 0.0f));
    float4 abs_f4 = abs(float4(0.0f, 0.0f, 0.0f, 0.0f));
    int clamp_i1 = clamp(0, 0, 0);
    int2 clamp_i2 = clamp(int2(0, 0), int2(0, 0), int2(0, 0));
    int3 clamp_i3 = clamp(int3(0, 0, 0), int3(0, 0, 0), int3(0, 0, 0));
    int4 clamp_14 = clamp(int4(0, 0, 0, 0), int4(0, 0, 0, 0), int4(0, 0, 0, 0));
    float clamp_f1 = clamp(0.0f, 0.0f, 0.0f);
    float2 clamp_f2 = clamp(float2(0.0f, 0.0f), float2(0.0f, 0.0f), float2(0.0f, 0.0f));
    float3 clamp_f3 = clamp(float3(0.0f, 0.0f, 0.0f), float3(0.0f, 0.0f, 0.0f), float3(0.0f, 0.0f, 0.0f));
    float4 clamp_f4 = clamp(float4(0.0f, 0.0f, 0.0f, 0.0f), float4(0.0f, 0.0f, 0.0f, 0.0f), float4(0.0f, 0.0f, 0.0f, 0.0f));
    float3 cross_3 = cross(float3(0.0f, 0.0f, 0.0f), float3(0.0f, 0.0f, 0.0f));
    float distance_2 = distance(float2(0.0f, 0.0f), float2(0.0f, 0.0f));
    float distance_3 = distance(float3(0.0f, 0.0f, 0.0f), float3(0.0f, 0.0f, 0.0f));
    float distance_4 = distance(float4(0.0f, 0.0f, 0.0f, 0.0f), float4(0.0f, 0.0f, 0.0f, 0.0f));
    float dot_f2 = dot(float2(0.0f, 0.0f), float2(0.0f, 0.0f));
    float dot_f3 = dot(float3(0.0f, 0.0f, 0.0f), float3(0.0f, 0.0f, 0.0f));
    float dot_f4 = dot(float4(0.0f, 0.0f, 0.0f, 0.0f), float4(0.0f, 0.0f, 0.0f, 0.0f));
    float3 mul_f3x3_f3 = mul((float3x3)0, (float3)0);
    float4 mul_f4x4_f4 = mul((float4x4)0, (float4)0);
    float lerp_f1 = lerp(0.0f, 0.0f, 0.0f);
    float2 lerp_f2 = lerp(float2(0.0f, 0.0f), float2(0.0f, 0.0f), float2(0.0f, 0.0f));
    float3 lerp_f3 = lerp(float3(0.0f, 0.0f, 0.0f), float3(0.0f, 0.0f, 0.0f), float3(0.0f, 0.0f, 0.0f));
    float4 lerp_f4 = lerp(float4(0.0f, 0.0f, 0.0f, 0.0f), float4(0.0f, 0.0f, 0.0f, 0.0f), float4(0.0f, 0.0f, 0.0f, 0.0f));
    float length_2 = length(float2(0.0f, 0.0f));
    float length_3 = length(float3(0.0f, 0.0f, 0.0f));
    float length_4 = length(float4(0.0f, 0.0f, 0.0f, 0.0f));
    int min_i1 = min(0, 0);
    int2 min_i2 = min(int2(0, 0), int2(0, 0));
    int3 min_i3 = min(int3(0, 0, 0), int3(0, 0, 0));
    int4 min_i4 = min(int4(0, 0, 0, 0), int4(0, 0, 0, 0));
    float min_f1 = min(0.0f, 0.0f);
    float2 min_f2 = min(float2(0.0f, 0.0f), float2(0.0f, 0.0f));
    float3 min_f3 = min(float3(0.0f, 0.0f, 0.0f), float3(0.0f, 0.0f, 0.0f));
    float4 min_f4 = min(float4(0.0f, 0.0f, 0.0f, 0.0f), float4(0.0f, 0.0f, 0.0f, 0.0f));
    int max_i1 = max(0, 0);
    int2 max_i2 = max(int2(0, 0), int2(0, 0));
    int3 max_i3 = max(int3(0, 0, 0), int3(0, 0, 0));
    int4 max_i4 = max(int4(0, 0, 0, 0), int4(0, 0, 0, 0));
    float max_f1 = max(0.0f, 0.0f);
    float2 max_f2 = max(float2(0.0f, 0.0f), float2(0.0f, 0.0f));
    float3 max_f3 = max(float3(0.0f, 0.0f, 0.0f), float3(0.0f, 0.0f, 0.0f));
    float4 max_f4 = max(float4(0.0f, 0.0f, 0.0f, 0.0f), float4(0.0f, 0.0f, 0.0f, 0.0f));
    float2 normalize_2 = normalize(float2(0.0f, 0.0f));
    float3 normalize_3 = normalize(float3(0.0f, 0.0f, 0.0f));
    float4 normalize_4 = normalize(float4(0.0f, 0.0f, 0.0f, 0.0f));
    float rcp_f1 = rcp(0.0f);
    float2 rcp_f2 = rcp(float2(0.0f, 0.0f));
    float3 rcp_f3 = rcp(float3(0.0f, 0.0f, 0.0f));
    float4 rcp_f4 = rcp(float4(0.0f, 0.0f, 0.0f, 0.0f));
    float pow_f1 = pow(0.0f, 0.0f);
    float2 pow_f2 = pow(float2(0.0f, 0.0f), float2(0.0f, 0.0f));
    float3 pow_f3 = pow(float3(0.0f, 0.0f, 0.0f), float3(0.0f, 0.0f, 0.0f));
    float4 pow_f4 = pow(float4(0.0f, 0.0f, 0.0f, 0.0f), float4(0.0f, 0.0f, 0.0f, 0.0f));
    float saturate_1 = saturate(0.0f);
    float2 saturate_2 = saturate(float2(0.0f, 0.0f));
    float3 saturate_3 = saturate(float3(0.0f, 0.0f, 0.0f));
    float4 saturate_4 = saturate(float4(0.0f, 0.0f, 0.0f, 0.0f));
    float sqrt_1 = sqrt(0.0f);
    float2 sqrt_2 = sqrt(float2(0.0f, 0.0f));
    float3 sqrt_3 = sqrt(float3(0.0f, 0.0f, 0.0f));
    float4 sqrt_4 = sqrt(float4(0.0f, 0.0f, 0.0f, 0.0f));
    float rsqrt_1 = rsqrt(0.0f);
    float2 rsqrt_2 = rsqrt(float2(0.0f, 0.0f));
    float3 rsqrt_3 = rsqrt(float3(0.0f, 0.0f, 0.0f));
    float4 rsqrt_4 = rsqrt(float4(0.0f, 0.0f, 0.0f, 0.0f));
    float ddx_f1 = ddx(0.0f);
    float2 ddx_f2 = ddx(float2(0.0f, 0.0f));
    float3 ddx_f3 = ddx(float3(0.0f, 0.0f, 0.0f));
    float4 ddx_f4 = ddx(float4(0.0f, 0.0f, 0.0f, 0.0f));
    float ddx_fine_f1 = ddx_fine(0.0f);
    float2 ddx_fine_f2 = ddx_fine(float2(0.0f, 0.0f));
    float3 ddx_fine_f3 = ddx_fine(float3(0.0f, 0.0f, 0.0f));
    float4 ddx_fine_f4 = ddx_fine(float4(0.0f, 0.0f, 0.0f, 0.0f));
    float ddy_f1 = ddy(0.0f);
    float2 ddy_f2 = ddy(float2(0.0f, 0.0f));
    float3 ddy_f3 = ddy(float3(0.0f, 0.0f, 0.0f));
    float4 ddy_f4 = ddy(float4(0.0f, 0.0f, 0.0f, 0.0f));
    float ddy_fine_f1 = ddy_fine(0.0f);
    float2 ddy_fine_f2 = ddy_fine(float2(0.0f, 0.0f));
    float3 ddy_fine_f3 = ddy_fine(float3(0.0f, 0.0f, 0.0f));
    float4 ddy_fine_f4 = ddy_fine(float4(0.0f, 0.0f, 0.0f, 0.0f));
    uint non_uniform_resource_index = NonUniformResourceIndex(0u);
}
