const Texture3D g_input : register(t0);
const RWTexture3D<float4> g_output : register(u1);
const SamplerState g_sampler : register(s2);

void test() {
    uint outInt;
    g_input.GetDimensions(0u, outInt, outInt, outInt, outInt);
    g_output.GetDimensions(outInt, outInt, outInt);
    const float4 load_srv = g_input.Load(int4(0, 0, 0, 0));
    const float4 load_srv_offset = g_input.Load(int4(0, 0, 0, 0), int3(0, 0, 0));
    const float4 load_srv_status = g_input.Load(int4(0, 0, 0, 0), int3(0, 0, 0), outInt);
    const float4 sample_base = g_input.Sample(g_sampler, float3(0.0, 0.0, 0.0));
    const float4 sample_offset = g_input.Sample(g_sampler, float3(0.0, 0.0, 0.0), int3(0, 0, 0));
    const float4 sample_clamp = g_input.Sample(g_sampler, float3(0.0, 0.0, 0.0), int3(0, 0, 0), 0.0);
    const float4 sample_status = g_input.Sample(g_sampler, float3(0.0, 0.0, 0.0), int3(0, 0, 0), 0.0, outInt);
    const float4 load_uav = g_output.Load(int3(0, 0, 0));
    const float4 load_uav_status = g_output.Load(int3(0, 0, 0), outInt);
}
