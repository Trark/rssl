struct MeshPayload
{
};

struct MeshVertex
{
};

struct MeshPrimitive
{
};

[outputtopology("triangle")]
[numthreads(124, 1, 1)]
void MeshShader(
    in uint thread_id : SV_DispatchThreadID,
    in uint group_index : SV_GroupIndex,
    in payload MeshPayload payloadData,
    out vertices MeshVertex verts[124],
    out primitives MeshPrimitive prims[64],
    out indices uint3 triangles[64])
{
    SetMeshOutputCounts(124, 64);
}

Pipeline Main
{
    MeshShader = MeshShader;

    // Arbitrary set of test properties even though we do not have a pixel shader
    RenderTargetFormat0 = "R8G8B8A8_UNORM";
    RenderTargetFormat2 = "R32G32_UINT";
    DepthTargetFormat = "D32_FLOAT";
}
